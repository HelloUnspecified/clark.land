---
export interface Props {
  title?: string;
  description?: string;
  url?: string;
}

const {
  title = 'Clark.Land',
  description = 'Your digital hub for all things Clark',
  url = '',
} = Astro.props;
---

<div class="mb-8">
  <h2 class="text-h3 font-display font-medium optical-medium text-gray-900 dark:text-white mb-8 mt-8 text-center transition-colors duration-300">
    Tell Your Friends
  </h2>

  <div class="grid grid-cols-2 gap-3">
    <!-- Copy Link -->
    <button
      id="copy-url-btn"
      class="relative flex items-center justify-center space-x-3 bg-gray-100 dark:bg-white/5 backdrop-blur-sm border border-gray-200 dark:border-white/10 rounded-xl px-4 py-3 text-gray-900 dark:text-white transition-all duration-300 ease-out group hover:bg-gray-200 dark:hover:bg-white/10"
      data-url={url}
    >
      <svg
        class="w-5 h-5"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"
        ></path>
      </svg>
      <span class="text-sm font-medium">Copy Link</span>

      <!-- Success indicator -->
      <div
        id="copy-success"
        class="absolute inset-0 bg-green-500/20 rounded-xl flex items-center justify-center opacity-0 transition-opacity duration-200"
      >
        <svg
          class="w-5 h-5 text-green-600 dark:text-green-400"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 13l4 4L19 7"></path>
        </svg>
      </div>
    </button>

    <!-- Share via Twitter -->
    <a
      href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title + ' - ' + description)}&url=${encodeURIComponent(url)}&via=clarksell&hashtags=tech,founder,leadership`}
      target="_blank"
      rel="noopener noreferrer"
      aria-label="Share on Twitter"
      class="flex items-center justify-center space-x-3 bg-gray-100 dark:bg-white/5 backdrop-blur-sm border border-gray-200 dark:border-white/10 rounded-xl px-4 py-3 text-gray-900 dark:text-white transition-all duration-300 ease-out group hover:bg-gray-200 dark:hover:bg-white/10"
    >
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path
          d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
        ></path>
      </svg>
      <span class="text-sm font-medium">Twitter</span>
    </a>

    <!-- Share via LinkedIn -->
    <a
      href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}&title=${encodeURIComponent(title)}&summary=${encodeURIComponent(description)}`}
      target="_blank"
      rel="noopener noreferrer"
      aria-label="Share on LinkedIn"
      class="flex items-center justify-center space-x-3 bg-gray-100 dark:bg-white/5 backdrop-blur-sm border border-gray-200 dark:border-white/10 rounded-xl px-4 py-3 text-gray-900 dark:text-white transition-all duration-300 ease-out group hover:bg-gray-200 dark:hover:bg-white/10"
    >
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path
          d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
        ></path>
      </svg>
      <span class="text-sm font-medium">LinkedIn</span>
    </a>

    <!-- Share via Email -->
    <a
      href={`mailto:?subject=${encodeURIComponent('Check out ' + title)}&body=${encodeURIComponent('I thought you might be interested in this profile:\n\n' + title + '\n' + description + '\n\n' + url)}`}
      aria-label="Share via email"
      class="flex items-center justify-center space-x-3 bg-gray-100 dark:bg-white/5 backdrop-blur-sm border border-gray-200 dark:border-white/10 rounded-xl px-4 py-3 text-gray-900 dark:text-white transition-all duration-300 ease-out group hover:bg-gray-200 dark:hover:bg-white/10"
    >
      <svg
        class="w-5 h-5"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
        ></path>
      </svg>
      <span class="text-sm font-medium">Email</span>
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const copyBtn = document.getElementById('copy-url-btn');
    const copySuccess = document.getElementById('copy-success');

    copyBtn?.addEventListener('click', async () => {
      try {
        const url = copyBtn.getAttribute('data-url') || window.location.href;
        await navigator.clipboard.writeText(url);

        // Show success indicator
        copySuccess?.classList.remove('opacity-0');
        copySuccess?.classList.add('opacity-100');

        // Hide after 2 seconds
        setTimeout(() => {
          copySuccess?.classList.remove('opacity-100');
          copySuccess?.classList.add('opacity-0');
        }, 2000);
      } catch (err) {
        console.error('Failed to copy URL:', err);

        // Fallback for older browsers
        const textArea = document.createElement('textarea');
        textArea.value =
          copyBtn.getAttribute('data-url') || window.location.href;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);

        // Show success indicator
        copySuccess?.classList.remove('opacity-0');
        copySuccess?.classList.add('opacity-100');

        setTimeout(() => {
          copySuccess?.classList.remove('opacity-100');
          copySuccess?.classList.add('opacity-0');
        }, 2000);
      }
    });
  });

  // Re-initialize on navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', () => {
    const copyBtn = document.getElementById('copy-url-btn');
    const copySuccess = document.getElementById('copy-success');

    copyBtn?.addEventListener('click', async () => {
      try {
        const url = copyBtn.getAttribute('data-url') || window.location.href;
        await navigator.clipboard.writeText(url);

        copySuccess?.classList.remove('opacity-0');
        copySuccess?.classList.add('opacity-100');

        setTimeout(() => {
          copySuccess?.classList.remove('opacity-100');
          copySuccess?.classList.add('opacity-0');
        }, 2000);
      } catch (err) {
        console.error('Failed to copy URL:', err);

        const textArea = document.createElement('textarea');
        textArea.value =
          copyBtn.getAttribute('data-url') || window.location.href;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);

        copySuccess?.classList.remove('opacity-0');
        copySuccess?.classList.add('opacity-100');

        setTimeout(() => {
          copySuccess?.classList.remove('opacity-100');
          copySuccess?.classList.add('opacity-0');
        }, 2000);
      }
    });
  });
</script>
